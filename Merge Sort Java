import java.util.*;
class merge_sort {

    static void merge(int a[], int p, int q, int r) {
        int b[] = new int[a.length];
        int i, j, k;
        k = 0;
        i = p;
        j = q + 1;
        while (i <= q && j <= r) {
            if (a[i] < a[j]) {
                b[k++] = a[i++];    // same as b[k]=a[i]; k++; i++;
            } else {
                b[k++] = a[j++];
            }
        }

        while (i <= q) {
            b[k++] = a[i++];
        }

        while (j <= r) {
            b[k++] = a[j++];
        }

        for (i = r; i >= p; i--) {
            a[i] = b[--k];  // copying back the sorted list to a[]
        }
    }

    // merge sort function
    static void mergeSort(int a[], int p, int r) {
        int q;
        if (p < r) {
            q = (p + r) / 2;
            mergeSort(a, p, q);
            mergeSort(a, q + 1, r);
            merge(a, p, q, r);
        }
    }

    // function to print the array
    static void printArray(int a[], int size) {

        for (int i = 0; i < size; i++) {
            System.out.print(a[i] + " ");
        }
    }

        public static void main(String[] args)
        {

            Scanner sc=new Scanner(System.in);
            System.out.println("Enter the size of the list");
            int n=sc.nextInt();
            int a[]=new int[n];
            System.out.println("Enter the elements");
            for(int i=0;i<n;i++)
            {
                a[i]=sc.nextInt();
            }
            // calling merge sort
            mergeSort(a, 0, a.length - 1);

            System.out.println("Sorted array: ");
            printArray(a, a.length);
        }
    }
