#include<stdio.h>
#include<stdlib.h>
#include<conio.h>
int x;
struct node
{

    int data;
    struct node *nextlink;
    struct node *previouslink;
}*start=NULL;

struct node *temp,*temp2,*temp3;

struct node *createnode()
{

struct node *newnode;
newnode=(struct node *)malloc(sizeof(struct node));
newnode->nextlink=NULL;
newnode->previouslink=NULL;
return newnode;
}
void insertAtEnding()
    {
    temp=createnode();
    printf("\nEnter the data\n");
        scanf("%d",&temp->data);
        if(start==NULL)
        {
            start=temp2=temp;
        }
        else
        {
            temp2->nextlink=temp;
            temp->previouslink=temp2;
            temp2=temp;
        }
}
void insertAtBeginning()
{
    temp=createnode();
        printf("\nEnter the data\n");
        scanf("%d",&temp->data);
        temp3=start;
        start=temp;
        temp->nextlink=temp3;
        temp3->previouslink=temp;
}
void insertAtMiddle()
{
    int x;
        temp=createnode();
        printf("\nEnter the data\n");
        scanf("%d",&temp->data);
        printf("\nEnter the position\n");
        scanf("%d",&x);
        temp2=start;
        for(int i=1;i<x-1;i++)
        {
            temp2=temp2->nextlink;
        }
        temp3=temp2->nextlink;
        temp3->previouslink=temp;
        temp2->nextlink=temp;
        temp->nextlink=temp3;
        temp->previouslink=temp2;
}
void deleteAtBeginning()
{
    temp2=start;
    temp3=temp2->nextlink;
    temp3->previouslink=NULL;
    start=temp3;
    free(temp2);
  }
  void deleteAtEnding()
  {
      temp2=start;
      temp3=start;
      while(temp2->nextlink!=NULL)
      {
          temp3=temp2;
          temp2=temp2->nextlink;
      }
      temp3->nextlink=NULL;
      free(temp2);
  }
  void deleteAtMiddle()
  {
      int p;
      printf("Enter the position to delete\n");
      scanf("%d",&p);
      temp2=start;
      temp3=start;
      for(int i=1;i<p;i++)
      {
          temp3=temp2;
          temp2=temp2->nextlink;
      }
      temp3->nextlink=temp2->nextlink;
      temp2->previouslink=temp3;
  }
void Traverse()
    {

        temp2=start;

            while(temp2!=NULL)
            {
                printf("%d ",temp2->data);
                temp3=temp2;
                temp2=temp2->nextlink;
            }

    }
    void reverseTraverse()
    {

        while(temp3!=NULL)
        {
            printf("%d ",temp3->data);
            temp3=temp3->previouslink;
        }
    }
    void main()
    {
        do
        {
            printf("\nEnter your choice\n");
            scanf("%d",&x);
            switch(x)
            {
                case 1:{
                insertAtEnding();
                break;
                }
                case 2:
                    {
                        insertAtBeginning();
                        break;
                    }
                    case 3:
                    {
                        insertAtMiddle();
                        break;
                    }
                    case 4:
                        {
                            deleteAtBeginning();
                            break;
                        }
                    case 5:
                        {
                            deleteAtEnding();
                            break;
                        }
                    case 6:
                        {
                            deleteAtMiddle();
                            break;
                        }
                    case 7:{
                            Traverse();
                            break;}
                    case 8:
                    {
                        reverseTraverse();
                        break;
                    }
                    case 9:
                    {
                        printf("\nEXIT POINT\n");
                        break;
                    }
                    default:{
                    printf("\nPlease enter a valid choice\n");
                    }

    }
        }while(x!=9);
    }
